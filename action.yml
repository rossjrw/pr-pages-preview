name: Deploy PR Preview
author: Ross Williams
description: >
  Deploy a pull request preview to GitHub Pages, similar to Vercel and
  Netlify.

branding:
  icon: git-pull-request
  color: yellow

inputs:
  preview-branch:
    description: Branch on which the previews will be deployed.
    required: false
    default: gh-pages
  umbrella-dir:
    description: Name of the directory containing all previews.
    required: false
    default: pr-preview
  source-dir:
    description: Directory containing files to deploy.
    required: false
    default: .
  action:
    description: >
      Determines what this action will do when it is executed. Supported
      values: `deploy`, `remove`, `auto` (default).

      If set to `deploy`, will attempt to deploy the preview and overwrite
      any existing preview in that location.

      If set to `remove`, will attempt to remove the preview in that
      location.

      If set to `auto`, the action will try to determine whether to deploy
      or remove the preview. It will deploy the preview on
      `pull_request.types.synchronize` and `.opened` events, and remove it
      on `pull_request.types.closed` events. It will not do anything for
      all other events. `auto` is the default value.
    required: false
    default: auto

outputs:
  deployment-url:
    description: The URL at which the preview has been deployed
    value: ${{ steps.url.outputs.url }}

runs:
  using: composite
  steps:
    - name: Get GitHub Pages url
      id: pages
      uses: actions/configure-pages@v2
    - name: Store environment variables
      env:
        action: ${{ inputs.action }}
        umbrella: ${{ inputs.umbrella-dir }}
        pr: ${{ github.event.number }}
        actionref: ${{ github.action_ref }}
        actionrepo: ${{ github.action_repository }}
        pagesurl: ${{ steps.pages.outputs.base_url }}
      run: |
        echo "action=$action" >> $GITHUB_ENV
        echo "targetdir=$umbrella/pr-$pr" >> $GITHUB_ENV
        echo "pr=$pr" >> $GITHUB_ENV

        echo "pagesurl=$pagesurl" >> $GITHUB_ENV

        echo "emptydir=$(mktemp -d)" >> $GITHUB_ENV
        echo "datetime=$(date '+%Y-%m-%d %H:%M %Z')" >> $GITHUB_ENV

        echo "actionref=$actionref" >> $GITHUB_ENV
        echo "actionrepo=$actionrepo" >> $GITHUB_ENV
      shell: bash

    - name: Determine action version
      run: >-
        ${{ github.action_path }}/lib/find-current-git-tag.sh
        -p $actionrepo -f $actionref
      shell: bash

    - name: Determine auto action
      if: env.action == 'auto'
      run: ${{ github.action_path }}/lib/determine-auto-action.sh
      shell: bash

    - name: Deploy preview directory
      if: env.action == 'deploy'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: ${{ inputs.preview-branch }}
        folder: ${{ inputs.source-dir }}
        target-folder: ${{ env.targetdir }}
        commit-message: Deploy preview for PR ${{ env.pr }} ðŸ›«
        force: false

    - name: Expose deployment URL
      id: url
      run: echo "::set-output name=url::${{ env.pagesurl }}"
      shell: bash

    - name: Leave a comment after deployment
      if: env.action == 'deploy' && env.deployment_status == 'success'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: pr-preview
        message: "\
          [PR Preview Action]\
          (${{ github.server_url }}/${{ env.actionrepo }})
          ${{ env.action_version }}

          :---:

          Built preview to branch [`${{ inputs.preview-branch }}`](\
          ${{ github.server_url }}/${{ github.repository }}\
          /tree/${{ inputs.preview-branch }})
          at ${{ env.datetime }}

          :rocket: Your preview will be available at
          ${{ env.pagesurl }}

          (once GitHub [finishes deploying it]\
          (${{ github.server_url }}/${{ github.repository }}\
          /actions/workflows/pages/pages-build-deployment))
          "

    - name: Remove preview directory
      if: env.action == 'remove'
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        branch: ${{ inputs.preview-branch }}
        folder: ${{ env.emptydir }}
        target-folder: ${{ env.targetdir }}
        commit-message: Remove preview for PR ${{ env.pr }} ðŸ›¬
        force: false

    - name: Leave a comment after removal
      if: env.action == 'remove' && env.deployment_status == 'success'
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: pr-preview
        message: "\
          [PR Preview Action]\
          (${{ github.server_url }}/${{ env.actionrepo }})
          ${{ env.action_version }}

          :---:

          Preview removed because the pull request was closed.

          ${{ env.datetime }}
          "
